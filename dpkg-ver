#!/bin/env bash

# `dpkg-ver` - Synaptic package version generator for Debian packages
# Copyright (C) 2025 by Michael Schaecher <MichaelSchaecher@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

set -eo pipefail

IterateVersion=${ITERATE_VERSION:-"15"}

# Check if the system is 64-bit
test "$(uname -m)" = "x86_64" || test "$(uname -m)" = "aarch64" || {
    print_info "none 64-bit system detected --- exiting" ; exit 1
}

# Get the list of unique commit dates in reverse chronological order
commit_dates=$(git log --date=short --pretty=format:'%ad' | sort -ur)

fistCommitDate=$(git log --date=short --pretty=format:'%ad' | tail -n 1)

for d in $commit_dates; do

    # Count the number of commits and reverse the order
    mapfile -t commitCount < <(git rev-list HEAD --since="$fistCommitDate" --until="$d 23:59")

    # Initialize version numbers
    setMajor=0 ; setMinor=0 ; setPatch=0

    # Iterate over each commit
    for ((i=0; i<${#commitCount[@]}; i++)); do
        setPatch=$(( setPatch + 1 ))
        (( setPatch == IterateVersion )) && { setPatch=0 ; setMinor=$(( setMinor + 1 )) ; }
        (( setMinor == IterateVersion )) && { setMinor=0 ; setMajor=$(( setMajor + 1 )) ; }
    done

    versionCode="${setMajor}.${setMinor}.${setPatch}"

done

echo "Version: ${versionCode}"
